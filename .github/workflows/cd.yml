name: Deploy to EC2

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: jeongminju45/myapp

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Clean build
        run: ./gradlew clean --no-build-cache

      - name: Build JAR
        run: ./gradlew bootJar

      - name: Check JAR timestamp
        run: |
          stat build/libs/*.jar
          ls -lh build/libs

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        run: |
          VERSION=$(date +%Y%m%d%H%M%S)
          docker build --build-arg JAR_FILE=build/libs/myapp-0.0.1-SNAPSHOT.jar \
            -t $IMAGE_NAME:$VERSION \
            -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest
        shell: bash

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker-compose down
            docker rmi jeongminju45/myapp:latest || true
            docker pull jeongminju45/myapp:latest
            docker-compose up -d
          
