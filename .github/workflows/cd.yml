name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed

permissions:
  actions: read
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: jeongminju45/myapp

    steps:
      # 1. ÍπÉÌóàÎ∏å Ï†ÄÏû•ÏÜå ÏΩîÎìú ÎÇ¥Î†§Î∞õÍ∏∞
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      # ciÏóêÏÑú Ï†ÄÏû•Ìïú artifacts(.jar) ÌååÏùº cdÏóêÏÑú Îã§Ïö¥ Î∞õÍ∏∞
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: built-jar
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.SCOPE_TOKEN }}

      # Íµ¨Ï°∞ ÌååÏïÖ
      - name: List contents
        run: ls -R

      # .jar ÌååÏùº Ïò¨Î∞îÎ•∏ Ìè¥ÎçîÍ≤ΩÎ°úÎ°ú ÏòÆÍ∏∞Í∏∞
      - name: Move downloaded JAR to expected path
        run: |
          mkdir -p build/libs
          mv myapp-0.0.1-SNAPSHOT.jar build/libs/


      # 3. JDK ÏÑ§Ïπò
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # 4. Î≤ÑÏ†Ñ Ï†ïÎ≥¥ Ï†ïÏùò (ÎÇ†Ïßú Í∏∞Î∞ò ÌÉúÍ∑∏)
      - name: Set VERSION
        id: set_version
        run: echo "VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      # 5. Docker Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Î∞è Ìë∏Ïãú (Í≥†Ïú† ÌÉúÍ∑∏ + latest)
      - name: Build & Push Docker Image
        run: |
          docker build --build-arg JAR_FILE=myapp-0.0.1-SNAPSHOT.jar \
            -t $IMAGE_NAME:${{ steps.set_version.outputs.VERSION }} \
            -t $IMAGE_NAME:latest .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push $IMAGE_NAME:${{ steps.set_version.outputs.VERSION }}
          docker push $IMAGE_NAME:latest
        shell: bash

      - name: Upload docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: docker-compose.yml
          target: /home/ec2-user/myapp/


      # 6. EC2Î°ú Î∞∞Ìè¨ (Í≥†Ïú† ÌÉúÍ∑∏Î°ú pull + ÎçÆÏñ¥Ïì∞Í∏∞)
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            IMAGE_TAG=${{ steps.set_version.outputs.VERSION }}
            IMAGE_NAME=jeongminju45/myapp
            cd /home/ec2-user/myapp
            echo "üß™ IMAGE_NAME=$IMAGE_NAME"

            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            docker-compose down
            docker rmi $IMAGE_NAME:$IMAGE_TAG || true
            docker pull $IMAGE_NAME:$IMAGE_TAG

            sed -i "s|image:.*|image: $IMAGE_NAME:$IMAGE_TAG|" docker-compose.yml
            docker-compose up -d
